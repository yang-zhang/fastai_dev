#AUTOGENERATED! DO NOT EDIT! File to edit: dev/14a_callback_data.ipynb (unless otherwise specified).

__all__ = ['CollectDataCallback', 'SamplerCallback']

#Cell
from ..test import *
from ..basics import *

#Cell
class CollectDataCallback(Callback):
    "Collect all batches, along with `pred` and `loss`, into `self.data`"
    def begin_fit(self): self.data = L()
    def after_batch(self): self.data.append(to_detach(to_cpu((self.xb,self.yb,self.pred,self.loss))))

#Cell
class SamplerCallback(Callback):
    "Use weighted sampling in `DataLoader`"
    run_after=TrainEvalCallback
    def __init__(self, dl, cls, **kwargs): store_attr(self, 'dl,cls,kwargs')
    def after_fit(self): self.dl.sampler = self.old_sampler
    def begin_fit(self):
        self.old_sampler = self.dl.sampler
        self.dl.replace_sampler(self.cls, **self.kwargs)

#Cell
@patch
def train_sampler(self:Learner, cls, **kwargs):
    self.add_cb(SamplerCallback(self.dbunch.train_dl, cls, **kwargs))
    return self